(function() {var implementors = {};
implementors["lambda_http"] = [{"text":"impl Send for Body","synthetic":true,"types":[]},{"text":"impl Send for PayloadError","synthetic":true,"types":[]},{"text":"impl Send for ApiGatewayV2RequestContext","synthetic":true,"types":[]},{"text":"impl Send for ApiGatewayRequestContext","synthetic":true,"types":[]},{"text":"impl Send for AlbRequestContext","synthetic":true,"types":[]},{"text":"impl Send for RequestContext","synthetic":true,"types":[]},{"text":"impl Send for Elb","synthetic":true,"types":[]},{"text":"impl Send for Http","synthetic":true,"types":[]},{"text":"impl Send for Identity","synthetic":true,"types":[]},{"text":"impl Send for StrMap","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Send for Adapter&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["lambda_runtime"] = [{"text":"impl Send for Context","synthetic":true,"types":[]},{"text":"impl Send for Config","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for HandlerFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()